{"version":3,"sources":["lib/Grid.ts","components/Timer/Timer.tsx","components/GridCell/GridCell.tsx","components/Grid/Grid.tsx","components/Tile/Tile.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GridCellKind","TimerState","GridCell","kind","Empty","visible","flagged","neighbors","this","Mine","Grid","rows","columns","mines","cells","flags","Math","max","min","create","i","push","j","k","floor","random","isMine","setKind","map","ii","jj","isInGrid","Boolean","hasNeighbours","makeVisible","row","column","renderer","className","cellRenderer","Array","fill","_","Tile","active","mine","others","clsx","GameState","Timer","state","timer","useRef","undefined","useState","seconds","setSeconds","useEffect","Reset","clearInterval","current","Running","window","setInterval","Stopped","App","grid","setGrid","moves","setMoves","Default","gameState","setGameState","guessing","setGuessing","timerState","setTimerState","playing","Playing","handleMouseDown","handleMouseUp","handleAddFlag","toggleFlag","handleSelect","showMines","Lost","makeClickHandler","handler","event","preventDefault","stopPropagation","onClick","cell","cellAt","onMouseDown","onMouseUp","onContextMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61b73a7a.chunk.js","sourcesContent":["export enum GridCellKind {\n  Empty = 'empty',\n  Mine = 'mine',\n}\n\nexport class GridCell {\n  kind: GridCellKind = GridCellKind.Empty;\n  visible: boolean = false;\n  flagged: boolean = false;\n  neighbors: number = 0;\n\n  setKind(kind: GridCellKind) {\n    this.kind = kind;\n  }\n\n  isMine(): boolean {\n    return this.kind === GridCellKind.Mine;\n  }\n}\n\nexport class Grid {\n  cells: GridCell[][];\n  rows: number;\n  columns: number;\n  mines: number;\n  flags: number;\n\n  constructor(rows: number, columns: number, mines: number) {\n    this.rows = Math.max(rows, 2);\n    this.columns = Math.max(columns, 2);\n    this.mines = Math.max(Math.min(mines, this.rows * this.columns - 1), 1);\n    this.flags = this.mines;\n    this.cells = [];\n    this.create();\n  }\n\n  create() {\n    for (let i: number = 0; i < this.rows; i++) {\n      this.cells.push([]);\n      for (let j: number = 0; j < this.columns; j++) {\n        this.cells[i].push(new GridCell());\n      }\n    }\n    for (let k: number = this.mines; k > 0; k--) {\n      const i: number = Math.floor(Math.random() * this.rows);\n      const j: number = Math.floor(Math.random() * this.columns);\n      if (this.isMine(i, j)) {\n        k++;\n      } else {\n        this.cells[i][j].setKind(GridCellKind.Mine);\n      }\n    }\n    for (let i: number = 0; i < this.rows; i++) {\n      for (let j: number = 0; j < this.columns; j++) {\n        if (!this.isMine(i, j)) {\n          let neighbors = 0;\n          [i - 1, i, i + 1].map((ii) =>\n            // eslint-disable-next-line array-callback-return\n            [j - 1, j, j + 1].map((jj) => {\n              if (this.isMine(ii, jj)) {\n                neighbors++;\n              }\n            })\n          );\n          this.cells[i][j].neighbors = neighbors;\n        }\n      }\n    }\n  }\n\n  cellAt(i: number, j: number): GridCell {\n    return this.cells[i][j];\n  }\n\n  isInGrid(i: number, j: number): boolean {\n    return i >= 0 && i < this.rows && j >= 0 && j < this.columns;\n  }\n\n  isMine(i: number, j: number): boolean {\n    return this.isInGrid(i, j) && this.cells[i][j].isMine();\n  }\n\n  reset() {\n    for (let i: number = 0; i < this.rows; i++) {\n      for (let j: number = 0; j < this.columns; j++) {\n        this.cells[i][j].flagged = false;\n        this.cells[i][j].visible = false;\n      }\n    }\n  }\n\n  restart() {\n    this.create();\n  }\n\n  reveal() {\n    for (let i: number = 0; i < this.rows; i++) {\n      for (let j: number = 0; j < this.columns; j++) {\n        if (this.isMine(i, j)) {\n          this.cells[i][j].flagged = false;\n          this.cells[i][j].visible = true;\n        }\n      }\n    }\n  }\n\n  toggleFlag(i: number, j: number) {\n    this.cells[i][j].flagged = !this.cells[i][j].flagged;\n    if (this.cells[i][j].flagged) {\n      this.flags--;\n    } else {\n      this.flags++;\n    }\n  }\n\n  hasNeighbours(i: number, j: number): boolean {\n    return Boolean(this.isInGrid(i, j) && this.cells[i][j].neighbors > 0);\n  }\n\n  makeVisible(i: number, j: number) {\n    if (\n      this.isInGrid(i, j) &&\n      !this.cells[i][j].visible &&\n      !this.cells[i][j].isMine() &&\n      !this.cells[i][j].flagged\n    ) {\n      this.cells[i][j].visible = true;\n      if (!this.hasNeighbours(i, j)) {\n        this.makeVisible(i - 1, j);\n        this.makeVisible(i + 1, j);\n        this.makeVisible(i, j - 1);\n        this.makeVisible(i, j + 1);\n      }\n    }\n  }\n\n  showMines() {\n    for (let i: number = 0; i < this.rows; i++) {\n      for (let j: number = 0; j < this.columns; j++) {\n        if (this.isMine(i, j)) {\n          this.cells[i][j].flagged = false;\n          this.cells[i][j].visible = true;\n        }\n      }\n    }\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport './Timer.scss';\n\ninterface TimerProps {\n  state: TimerState;\n}\n\nexport enum TimerState {\n  Reset,\n  Running,\n  Stopped,\n}\n\nconst Timer: React.FC<TimerProps> = ({ state }) => {\n  const timer = useRef<number | undefined>(undefined);\n  const [seconds, setSeconds] = useState<number>(0);\n  useEffect(() => {\n    switch (state) {\n      case TimerState.Reset:\n        setSeconds(() => 0);\n        clearInterval(timer.current);\n        timer.current = undefined;\n        break;\n      case TimerState.Running:\n        if (!timer.current) {\n          setSeconds(() => 0);\n          timer.current = window.setInterval(() => {\n            setSeconds((seconds: number) => seconds + 1);\n          }, 1000);\n        }\n        break;\n      case TimerState.Stopped:\n        clearInterval(timer.current);\n        timer.current = undefined;\n        break;\n      default:\n    }\n    return () => {\n      clearInterval(timer.current);\n      timer.current = undefined;\n    };\n  }, [state, timer]);\n\n  return <div className=\"timer\">Time: {seconds}</div>;\n};\n\nexport default Timer;\n","import React from 'react';\n\nimport './GridCell.scss';\n\ninterface GridCellProps {\n  row: number;\n  column: number;\n  renderer: (i: number, j: number) => any;\n}\n\nconst GridCell: React.FC<GridCellProps> = ({ row, column, renderer }) => {\n  return <div className=\"grid-cell\">{renderer(row, column)}</div>;\n};\n\nexport default GridCell;\n","import React from 'react';\n\nimport GridCell from '../GridCell';\n\nimport './Grid.scss';\n\ninterface GridProps {\n  rows: number;\n  columns: number;\n  cellRenderer: (i: number, j: number) => any;\n}\n\nconst Grid: React.FC<GridProps> = ({ rows, columns, cellRenderer }) => {\n  return (\n    <div className=\"grid\">\n      {Array(rows)\n        .fill(1)\n        .map((_: any, i: number) => (\n          <div key={`grid-row-${i + 1}`} className=\"grid-cell-row\">\n            {Array(columns)\n              .fill(1)\n              .map((_: any, j: number) => (\n                <div key={`grid-column-${j + 1}`} className=\"grid-cell-column\">\n                  <GridCell row={i} column={j} renderer={cellRenderer} />\n                </div>\n              ))}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Grid;\n","import clsx from 'clsx';\nimport React from 'react';\n\nimport './Tile.scss';\n\ninterface TileProps {\n  active: boolean;\n  visible: boolean;\n  mine: boolean;\n  flagged: boolean;\n  neighbors: number;\n}\n\nconst Tile: React.FC<TileProps> = ({\n  active,\n  visible,\n  mine,\n  flagged,\n  neighbors,\n  ...others\n}) => {\n  return (\n    <div\n      className={clsx('tile', {\n        'tile-active': active,\n        'tile-visible': visible,\n      })}\n      {...others}\n    >\n      <div\n        className={clsx(\n          'tile-image',\n          `tile-image-kind-${mine ? 'mine' : 'empty'}`\n        )}\n      />\n      <div className={clsx('tile-neighbors', `tile-neighbors-${neighbors}`)} />\n      {flagged ? <div className=\"tile-flagged\" /> : null}\n    </div>\n  );\n};\n\nexport default Tile;\n","import clsx from 'clsx';\nimport React, { useState, MouseEvent } from 'react';\n\nimport { Grid } from './lib/Grid';\nimport GridComponent from './components/Grid';\nimport Tile from './components/Tile';\nimport Timer, { TimerState } from './components/Timer';\n\nimport './App.scss';\n\nenum GameState {\n  Default,\n  Playing,\n  Won,\n  Lost,\n}\n\nfunction App() {\n  const [rows] = useState<number>(12);\n  const [columns] = useState<number>(12);\n  const [mines] = useState<number>(24);\n\n  const [grid, setGrid] = useState<Grid>(new Grid(rows, columns, mines));\n  const [moves, setMoves] = useState<number>(0);\n\n  const [gameState, setGameState] = useState<GameState>(GameState.Default);\n  const [guessing, setGuessing] = useState<Boolean>(false);\n  const [timerState, setTimerState] = useState<TimerState>(TimerState.Stopped);\n\n  const playing = gameState === GameState.Playing;\n  const active = playing || gameState === GameState.Default;\n\n  const handleRestart = () => {\n    setGrid(new Grid(rows, columns, mines));\n    setMoves(0);\n    setGameState(GameState.Default);\n    setTimerState(TimerState.Reset);\n  };\n\n  const handleMouseDown = () => {\n    if (playing) setGuessing(true);\n  };\n\n  const handleMouseUp = () => {\n    if (playing) setGuessing(false);\n  };\n\n  const handleAddFlag = (i: number, j: number) => {\n    grid.toggleFlag(i, j);\n    setMoves(moves + 1);\n    setGameState(GameState.Playing);\n    setTimerState(TimerState.Running);\n  };\n\n  const handleSelect = (i: number, j: number) => {\n    if (grid.isMine(i, j)) {\n      grid.showMines();\n      setGameState(GameState.Lost);\n      setTimerState(TimerState.Stopped);\n    } else {\n      grid.makeVisible(i, j);\n      setGameState(GameState.Playing);\n      setTimerState(TimerState.Running);\n    }\n    setMoves(moves + 1);\n  };\n\n  const makeClickHandler = (\n    handler: (i: number, j: number) => void,\n    i: number,\n    j: number\n  ): ((event: MouseEvent) => void) | undefined => {\n    if (!active || grid.cells[i][j].visible) {\n      return undefined;\n    }\n    return (event: MouseEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      handler(i, j);\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"heading\">Pigsweeper</div>\n      <div className=\"game\">\n        <div className=\"game-status\">\n          <div className=\"game-status-timer\">\n            <Timer state={timerState} />\n          </div>\n          <div\n            className={clsx('status', {\n              'status-lost': gameState === GameState.Lost,\n              'status-guessing': guessing,\n            })}\n            onClick={handleRestart}\n          />\n          <div className=\"game-status-flags\">Flags: {grid.flags}</div>\n        </div>\n        <GridComponent\n          rows={grid.rows}\n          columns={grid.columns}\n          cellRenderer={(i: number, j: number) => {\n            const cell = grid.cellAt(i, j);\n\n            return (\n              <div\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}\n                onClick={makeClickHandler(handleSelect, i, j)}\n                onContextMenu={makeClickHandler(handleAddFlag, i, j)}\n              >\n                <Tile\n                  active={active}\n                  visible={cell.visible}\n                  mine={cell.isMine()}\n                  neighbors={cell.neighbors}\n                  flagged={cell.flagged}\n                />\n              </div>\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}